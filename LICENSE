 -- Warte, bis der Spieler geladen ist
local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
wait(1)

-- Monster-Transformation
local function TransformToMonster()
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.BodyDepthScale.Value = 5
        humanoid.BodyHeightScale.Value = 5
        humanoid.BodyWidthScale.Value = 5
        humanoid.HeadScale.Value = 3
        char.Head.BrickColor = BrickColor.new("Really black")

        local fire = Instance.new("Fire", char.Head)
        fire.Size = 10
        fire.Heat = 10
        fire.Color = Color3.new(1, 0, 0)
    end
end

-- Admin-Befehle
local AdminCommands = {
    ["kill"] = function(target)
        local targetPlayer = game.Players:FindFirstChild(target)
        if targetPlayer and targetPlayer.Character then
            targetPlayer.Character:BreakJoints()
        end
    end,
    ["fly"] = function(target)
        local targetPlayer = game.Players:FindFirstChild(target)
        if targetPlayer and targetPlayer.Character then
            local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = 200
            end
        end
    end,
    ["noclip"] = function(target)
        local targetPlayer = game.Players:FindFirstChild(target)
        if targetPlayer and targetPlayer.Character then
            for _, part in pairs(targetPlayer.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end
}

game.Players.LocalPlayer.Chatted:Connect(function(msg)
    local args = string.split(msg, " ")
    local command = args[1]:lower()
    local target = args[2]
    if AdminCommands[command] and target then
        AdminCommands[command](target)
    end
end)

wait(2)
TransformToMonster()
